var A = Object.defineProperty; var c = (d, b) => { for (var l in b) A(d, l, { get: b[l], enumerable: !0 }) }; function j(d) { let b = atob(d), l = b.length, m = new Uint8Array(l); for (let G = 0; G < l; G++)m[G] = b.charCodeAt(G); return m } function M(d) { typeof d == "string" && (d = new TextEncoder().encode(d)); let b = "", l = d.byteLength; for (let m = 0; m < l; m++)b += String.fromCharCode(d[m]); return btoa(b) } var o = d => { throw new Error("Not initialized yet") }, g = typeof window > "u" && typeof globalThis.WebSocketPair > "u"; typeof Deno > "u" && (self.Deno = { args: [], build: { arch: "x86_64" }, env: { get() { } } }); var T = new Map, k = 0; g && (globalThis.syscall = async (d, ...b) => await new Promise((l, m) => { k++, T.set(k, { resolve: l, reject: m }), o({ type: "sys", id: k, name: d, args: b }) })); function z(d, b, l) { g && (o = l, self.addEventListener("message", m => { (async () => { let G = m.data; switch (G.type) { case "inv": { let u = d[G.name]; if (!u) throw new Error(`Function not loaded: ${G.name}`); try { let X = await Promise.resolve(u(...G.args || [])); o({ type: "invr", id: G.id, result: X }) } catch (X) { console.error("An exception was thrown as a result of invoking function", G.name, "error:", X.message), o({ type: "invr", id: G.id, error: X.message }) } } break; case "sysr": { let u = G.id, X = T.get(u); if (!X) throw Error("Invalid request id"); T.delete(u), G.error ? X.reject(new Error(G.error)) : X.resolve(G.result) } break } })().catch(console.error) }), o({ type: "manifest", manifest: b })) } async function q(d, b) { if (typeof d != "string") { let l = new Uint8Array(await d.arrayBuffer()), m = l.length > 0 ? M(l) : void 0; b = { method: d.method, headers: Object.fromEntries(d.headers.entries()), base64Body: m }, d = d.url } return syscall("sandboxFetch.fetch", d, b) } globalThis.nativeFetch = globalThis.fetch; function _() { globalThis.fetch = async function (d, b) { let l = b && b.body ? M(new Uint8Array(await new Response(b.body).arrayBuffer())) : void 0, m = await q(d, b && { method: b.method, headers: b.headers, base64Body: l }); return new Response(m.base64Body ? j(m.base64Body) : null, { status: m.status, headers: m.headers }) } } g && _(); var K = {}; c(K, { confirm: () => Rd, copyToClipboard: () => Qd, deleteLine: () => Fd, dispatch: () => Hd, downloadFile: () => Ld, filterBox: () => od, flashNotification: () => hd, fold: () => Td, foldAll: () => ed, getCurrentPage: () => $, getCursor: () => Zd, getSelection: () => ld, getText: () => dd, getUiOption: () => Md, goHistory: () => yd, hidePanel: () => xd, insertAtCursor: () => Cd, insertAtPos: () => ad, moveCursor: () => nd, moveCursorToLine: () => td, navigate: () => Xd, newWindow: () => sd, openCommandPalette: () => ud, openPageNavigator: () => Wd, openSearchPanel: () => zd, openUrl: () => id, prompt: () => Id, redo: () => jd, reloadConfigAndCommands: () => cd, reloadPage: () => Kd, reloadUI: () => pd, replaceRange: () => Sd, save: () => Gd, setSelection: () => md, setText: () => bd, setUiOption: () => kd, showPanel: () => Vd, toggleFold: () => Nd, undo: () => Jd, unfold: () => gd, unfoldAll: () => Pd, uploadFile: () => Yd, vimEx: () => vd }); typeof self > "u" && (self = { syscall: () => { throw new Error("Not implemented here") } }); function Z(d, ...b) { return globalThis.syscall(d, ...b) } function $() { return Z("editor.getCurrentPage") } function dd() { return Z("editor.getText") } function bd(d, b = !1) { return Z("editor.setText", d, b) } function Zd() { return Z("editor.getCursor") } function ld() { return Z("editor.getSelection") } function md(d, b) { return Z("editor.setSelection", d, b) } function Gd() { return Z("editor.save") } function Xd(d, b = !1, l = !1) { return Z("editor.navigate", d, b, l) } function Wd(d = "page") { return Z("editor.openPageNavigator", d) } function ud() { return Z("editor.openCommandPalette") } function Kd() { return Z("editor.reloadPage") } function pd() { return Z("editor.reloadUI") } function cd() { return Z("editor.reloadConfigAndCommands") } function id(d, b = !1) { return Z("editor.openUrl", d, b) } function sd() { return Z("editor.newWindow") } function yd(d) { return Z("editor.goHistory", d) } function Ld(d, b) { return Z("editor.downloadFile", d, b) } function Yd(d, b) { return Z("editor.uploadFile", d, b) } function hd(d, b = "info") { return Z("editor.flashNotification", d, b) } function od(d, b, l = "", m = "") { return Z("editor.filterBox", d, b, l, m) } function Vd(d, b, l, m = "") { return Z("editor.showPanel", d, b, l, m) } function xd(d) { return Z("editor.hidePanel", d) } function ad(d, b) { return Z("editor.insertAtPos", d, b) } function Sd(d, b, l) { return Z("editor.replaceRange", d, b, l) } function nd(d, b = !1) { return Z("editor.moveCursor", d, b) } function td(d, b = 1, l = !1) { return Z("editor.moveCursorToLine", d, b, l) } function Cd(d) { return Z("editor.insertAtCursor", d) } function Hd(d) { return Z("editor.dispatch", d) } function Id(d, b = "") { return Z("editor.prompt", d, b) } function Rd(d) { return Z("editor.confirm", d) } function Md(d) { return Z("editor.getUiOption", d) } function kd(d, b) { return Z("editor.setUiOption", d, b) } function Td() { return Z("editor.fold") } function gd() { return Z("editor.unfold") } function Nd() { return Z("editor.toggleFold") } function ed() { return Z("editor.foldAll") } function Pd() { return Z("editor.unfoldAll") } function Jd() { return Z("editor.undo") } function jd() { return Z("editor.redo") } function zd() { return Z("editor.openSearchPanel") } function Qd(d) { return Z("editor.copyToClipboard", d) } function Fd() { return Z("editor.deleteLine") } function vd(d) { return Z("editor.vimEx", d) } var S = {}; c(S, { parseMarkdown: () => Ud, renderParseTree: () => wd }); function Ud(d) { return Z("markdown.parseMarkdown", d) } function wd(d) { return Z("markdown.renderParseTree", d) } var n = {}; c(n, { deleteAttachment: () => db, deleteFile: () => Gb, deletePage: () => Ed, fileExists: () => Xb, getAttachmentMeta: () => qd, getFileMeta: () => lb, getPageMeta: () => Bd, listAttachments: () => Ad, listFiles: () => bb, listPages: () => Dd, listPlugs: () => fd, readAttachment: () => _d, readFile: () => Zb, readPage: () => rd, writeAttachment: () => $d, writeFile: () => mb, writePage: () => Od }); function Dd() { return Z("space.listPages") } function Bd(d) { return Z("space.getPageMeta", d) } function rd(d) { return Z("space.readPage", d) } function Od(d, b) { return Z("space.writePage", d, b) } function Ed(d) { return Z("space.deletePage", d) } function fd() { return Z("space.listPlugs") } function Ad() { return Z("space.listAttachments") } function qd(d) { return Z("space.getAttachmentMeta", d) } function _d(d) { return Z("space.readAttachment", d) } function $d(d, b) { return Z("space.writeAttachment", d, b) } function db(d) { return Z("space.deleteAttachment", d) } function bb() { return Z("space.listFiles") } function Zb(d) { return Z("space.readFile", d) } function lb(d) { return Z("space.getFileMeta", d) } function mb(d, b) { return Z("space.writeFile", d, b) } function Gb(d) { return Z("space.deleteFile", d) } function Xb(d) { return Z("space.fileExists", d) } var i = {}; c(i, { applyAttributeExtractors: () => ib, getEnv: () => Yb, getMode: () => hb, getSpaceConfig: () => sb, getVersion: () => ob, invokeCommand: () => ub, invokeFunction: () => Wb, invokeSpaceFunction: () => cb, listCommands: () => Kb, listSyscalls: () => pb, reloadConfig: () => Lb, reloadPlugs: () => yb }); function Wb(d, ...b) { return Z("system.invokeFunction", d, ...b) } function ub(d, b) { return Z("system.invokeCommand", d, b) } function Kb() { return Z("system.listCommands") } function pb() { return Z("system.listSyscalls") } function cb(d, ...b) { return Z("system.invokeSpaceFunction", d, ...b) } function ib(d, b, l) { return Z("system.applyAttributeExtractors", d, b, l) } async function sb(d, b) { return await Z("system.getSpaceConfig", d) ?? b } function yb() { return Z("system.reloadPlugs") } function Lb() { return Z("system.reloadConfig") } function Yb() { return Z("system.getEnv") } function hb() { return Z("system.getMode") } function ob() { return Z("system.getVersion") } var s = {}; c(s, { del: () => ab, get: () => xb, set: () => Vb }); function Vb(d, b) { return Z("clientStore.set", d, b) } function xb(d) { return Z("clientStore.get", d) } function ab(d) { return Z("clientStore.delete", d) } var y = {}; c(y, { readAsset: () => Rb }); function Ib(d) { let b = atob(d), l = b.length, m = new Uint8Array(l); for (let G = 0; G < l; G++)m[G] = b.charCodeAt(G); return m } function Q(d) { let b = d.split(",", 2)[1]; return Ib(b) } async function Rb(d, b, l = "utf8") { let m = await Z("asset.readAsset", d, b); switch (l) { case "utf8": return new TextDecoder().decode(Q(m)); case "dataurl": return m } } var t = {}; c(t, { parse: () => Tb, stringify: () => gb }); function Tb(d) { return Z("yaml.parse", d) } function gb(d) { return Z("yaml.stringify", d) } var V = class { graphViewKey; constructor(b) { this.graphViewKey = b } async getGraphViewStatus() { return !!await s.get(this.graphViewKey) } async setGraphViewStatus(b) { await s.set(this.graphViewKey, b) } async toggleGraphViewStatus() { await s.set(this.graphViewKey, !await this.getGraphViewStatus()) } async darkMode() { return !!await s.get("darkMode") } }; function N(d, b) { if (b(d)) return [d]; let l = []; if (d.children) for (let m of d.children) l = [...l, ...N(m, b)]; return l } function e(d, b) { return N(d, l => l.type === b)[0] } function F(d, b) { N(d, b) } async function jb(d, b) { let l = await n.readPage(d), m = await S.parseMarkdown(l), G; return F(m, u => { if (u.type !== "FencedCode") return !1; let X = e(u, "CodeInfo"); if (b && !X || b && !b.includes(X.children[0].text)) return !1; let p = e(u, "CodeText"); return p ? (G = p.children[0].text, !0) : !1 }), G } async function v(d, b = ["yaml"]) { let l = await jb(d, b); if (l !== void 0) try { return t.parse(l) } catch (m) { throw console.error("YAML Page parser error", m), new Error(`YAML Error: ${m.message}`) } } async function U(d, b) { try { return await i.getSpaceConfig(d) ?? b } catch { try { let m = (await v("SETTINGS") || {})[d]; return m === void 0 ? b : m } catch (l) { if (l.message === "Not found") return b; throw l } } } async function L(d) { let b = await U("graphview", {}); return b[d] !== void 0 ? b[d] : !1 } async function w(d) { if (d.length === 0) { console.log("no page name supplied, ignoring navigation"); return } let [b, l] = d.split("@"); console.log(`navigating to ${d}`), await K.navigate(b, +l) } var C = class { colorMapSettings; colorMapPathSettings; colorMapTagSettings; spacetags; spacepages; taggedPages; individuallyTaggedPages; default_color; builtin_default_color; async init(b, l) { this.colorMapSettings = await L("colormap"), console.log(this.colorMapSettings), this.colorMapPathSettings = this.colorMapSettings ? this.colorMapSettings.path : [], this.colorMapTagSettings = this.colorMapSettings ? this.colorMapSettings.tag : [], this.spacepages = b, this.default_color = await L("default_color"), this.builtin_default_color = l ? "bfbfbf" : "000000" } build() { return this.spacepages.map(b => { if (b.tags.find(l => l.startsWith("node_color="))) return { page: b.name, color: b.tags.find(l => l.startsWith("node_color=")).split("=")[1] }; if (this.colorMapTagSettings) { let l = b.tags.filter(m => this.colorMapTagSettings.hasOwnProperty(m)); if (l.length > 0) return { page: b.name, color: this.colorMapTagSettings[l[0]] } } if (this.colorMapPathSettings) { let l = Object.keys(this.colorMapPathSettings).find(m => b.name.startsWith(m)); if (l) return { page: b.name, color: this.colorMapPathSettings[l] } } return { page: b.name, color: this.default_color ? this.default_color : this.builtin_default_color } }) } }; var H = class { ignoredPages; ignoredPrefixes; constructor(b = [], l = []) { this.ignoredPages = b, this.ignoredPrefixes = l } async init(b) { let l = await L("ignoredPrefixes"); this.ignoredPrefixes = l || [], this.ignoredPages = b.filter(m => this.isIgnoredPage(m)).map(({ name: m }) => m) } isIgnoredPage(b) { return b.tags.includes("graphignore") || this.ignoredPrefixes.some(l => b.name.startsWith(l)) } pagefilter(b) { return !this.ignoredPages.includes(b.name) } linkfilter(b) { return !this.ignoredPages.includes(b.page) && (b.hasOwnProperty("toPage") && !this.ignoredPages.includes(b.toPage) || b.hasOwnProperty("toFile") && !this.ignoredPages.includes(b.toFile)) } }; var Y = new V("showGraphView"), x = new V("showLocalGraphView"), D = new C; async function B() { if (await Y.toggleGraphViewStatus(), await x.setGraphViewStatus(!1), await Y.getGraphViewStatus()) { let d = await K.getCurrentPage(); await I(d, !1) } else await K.hidePanel("lhs") } async function r() { if (await x.toggleGraphViewStatus(), await Y.setGraphViewStatus(!1), await x.getGraphViewStatus()) { let d = await K.getCurrentPage(); await I(d, !0) } else await K.hidePanel("lhs") } async function O() { let d = await K.getCurrentPage(), b = await x.getGraphViewStatus(), l = await Y.getGraphViewStatus(); b ? await I(d, !0) : l && await I(d, !1) } async function I(d, b = !1) {
  let l = await Qb(d), m = JSON.stringify(l), G = await y.readAsset("graphview", "assets/style.css", "utf8"), u = await y.readAsset("graphview", "assets/d3.js", "utf8"), X = await y.readAsset("graphview", "assets/d3-force.js", "utf8"), p = await y.readAsset("graphview", "assets/force-graph.js", "utf8"), a = await zb(m, d, b); if (b ? await x.getGraphViewStatus() : await Y.getGraphViewStatus()) {
    let J = b ? `
      <div id="local-graph-controls" style="position: absolute; top: 10px; right: 10px; z-index: 1000;">
        <button id="expand-btn" onclick="expandGraph()" style="padding: 8px 12px; background: #007acc; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 12px; margin-bottom: 5px; display: block; width: 100%;">Expand</button>
        <button id="reset-btn" onclick="resetLocalGraph()" style="padding: 6px 12px; background: #666; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 11px; margin-bottom: 5px; display: block; width: 100%;">Reset</button>
        <div id="level-indicator" style="background: rgba(0,0,0,0.7); color: white; padding: 4px 8px; border-radius: 4px; font-size: 11px; text-align: center;">Level: 1</div>
      </div>`: ""; await K.showPanel("lhs", 1, `<html>
        <head>
          <style>${G}</style>
        </head>
        <body>
          ${J}
          <div id="graph"></div>
        </body>
      </html>`, `
       ${u}
       ${X}
       ${p}
       ${a}
      `)
  }
} async function zb(d, b, l = !1) {
  return `
    const fullGraph = ${d};
    const currentPage = "${b}";
    const isLocalMode = ${l};
    let expansionLevel = 1; // Start with immediate neighbors only
    let visibleGraph = fullGraph;

    console.log('Graph loaded - Nodes: ', fullGraph.nodes.length, 'Links: ', fullGraph.links.length, 'Current page:', currentPage, 'Local mode:', isLocalMode);

    const graph_div = document.querySelector('#graph');
    
    let chart;
    
    // Function to get neighbors at a specific distance
    function getNeighborsAtDistance(nodeId, distance, nodes, links) {
      // Check if the center node exists in the graph
      const centerNodeExists = nodes.some(node => node.id === nodeId);
      if (!centerNodeExists) {
        console.warn('Center node not found in graph:', nodeId);
        return []; // Return empty if center node doesn't exist
      }
      
      let currentLevel = new Set([nodeId]);
      let allNeighbors = new Set([nodeId]);
      
      for (let level = 0; level < distance; level++) {
        let nextLevel = new Set();
        for (let node of currentLevel) {
          // Find all directly connected nodes (bidirectional)
          links.forEach(link => {
            if (link.source === node && !allNeighbors.has(link.target)) {
              nextLevel.add(link.target);
              allNeighbors.add(link.target);
            }
            if (link.target === node && !allNeighbors.has(link.source)) {
              nextLevel.add(link.source);
              allNeighbors.add(link.source);
            }
          });
        }
        currentLevel = nextLevel;
        if (currentLevel.size === 0) break; // No more neighbors to expand
      }
      
      return Array.from(allNeighbors);
    }
    
    // Function to filter graph for local view
    function getLocalGraph(centerNode, level) {
      if (!isLocalMode) return fullGraph;
      
      const visibleNodeIds = getNeighborsAtDistance(centerNode, level, fullGraph.nodes, fullGraph.links);
      
      // If no nodes found (e.g., isolated node or non-existent node), show at least the center node
      if (visibleNodeIds.length === 0) {
        const centerNodeExists = fullGraph.nodes.some(node => node.id === centerNode);
        if (centerNodeExists) {
          visibleNodeIds.push(centerNode);
        }
      }
      
      const visibleNodes = fullGraph.nodes.filter(node => visibleNodeIds.includes(node.id));
      const visibleLinks = fullGraph.links.filter(link => 
        visibleNodeIds.includes(link.source) && visibleNodeIds.includes(link.target)
      );
      
      return { nodes: visibleNodes, links: visibleLinks };
    }
    
    // Function to reset local graph to initial state
    function resetLocalGraph() {
      if (!isLocalMode) return;
      expansionLevel = 1;
      
      // Update level indicator
      const levelIndicator = document.getElementById('level-indicator');
      if (levelIndicator) {
        levelIndicator.textContent = \`Level: \${expansionLevel}\`;
      }
      
      visibleGraph = getLocalGraph(currentPage, expansionLevel);
      createChart();
    }
    
    // Function to expand the local graph
    function expandGraph() {
      if (!isLocalMode) return;
      expansionLevel++;
      
      // Update level indicator
      const levelIndicator = document.getElementById('level-indicator');
      if (levelIndicator) {
        levelIndicator.textContent = \`Level: \${expansionLevel}\`;
      }
      
      visibleGraph = getLocalGraph(currentPage, expansionLevel);
      createChart();
    }
    
    // Make functions globally available
    window.expandGraph = expandGraph;
    window.resetLocalGraph = resetLocalGraph;
    
    function createChart() {
      // Remove the existing chart object from the DOM
      graph_div.innerHTML = '';
      
      // Use visible graph in local mode, full graph otherwise
      const graphToRender = isLocalMode ? getLocalGraph(currentPage, expansionLevel) : fullGraph;

      // In local mode, enhance the center node to make it stand out
      if (isLocalMode) {
        graphToRender.nodes.forEach(node => {
          if (node.id === currentPage) {
            node.isCenter = true;
          }
        });
      }
    
      // Create a new chart object with the updated dimensions
      chart = ForceGraph(graphToRender, {
        nodeId: d => d.id,
        nodeTitle: d => d.id,
        nodeStrokeOpacity: 1,
        height: window.innerHeight,
        width: window.innerWidth,
      });
    
      // Add the new chart object to the DOM
      graph_div.appendChild(chart);
    }
    
    // Initialize the graph
    if (isLocalMode) {
      visibleGraph = getLocalGraph(currentPage, expansionLevel);
    }
    createChart();

    function handleResize() {
      // Check if the dimensions have actually changed
      if (window.innerHeight-10 !== chart.height || window.innerWidth-10 !== chart.width) {
        // Recreate/redraw the chart object
        createChart();
      }
    }
        
    let timeout = false;
    // Add an event listener to the window object that listens for the resize event
    window.addEventListener('resize', () => {
      clearTimeout(timeout);
      timeout = setTimeout(handleResize, 250);
    });
  `} async function Qb(d) { let b = await i.invokeFunction("index.queryLuaObjects", "page", {}), l = new H; await l.init(b); let m = b.filter(l.pagefilter.bind(l)).map(({ name: W }) => W), u = (await i.invokeFunction("index.queryLuaObjects", "link", {})).filter(l.linkfilter.bind(l)).map(W => { var h = W.toPage; return W.hasOwnProperty("toPage") && !m.includes(W.toPage) ? m.push(W.toPage) : W.hasOwnProperty("toFile") && (m.push(W.toFile), h = W.toFile), { source: W.page, target: h } }), X = await Y.darkMode(); await D.init(b, X); let p = D.build(), a = await L("default_color"), P = X ? "bfbfbf" : "000000"; return { nodes: m.map(W => { let h = a || P; return p.find(R => R.page === W) && (h = p.find(R => R.page === W).color), { id: W, color: h } }), links: u } } var E = { toggle: B, toggleLocal: r, updateGraphView: O, navigateTo: w }, f = { name: "graphview", version: .1, assets: { "assets/d3-force.js": { data: "data:application/javascript;base64,", mtime: 1751843967299 }, "assets/d3.js": { data: "data:application/javascript;base64,", mtime: 1751843967301 }, "assets/force-graph.js": { data: "data:application/javascript;base64,", mtime: 1751843967421 }, "assets/style.css": { data: "data:text/css;base64,dGV4dC5zdmd0ZXh0OmhvdmVyIHsNCiAgZmlsbDogIzE3MTE1ZTsNCiAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KYm9keSB7DQogIG92ZXJmbG93OiBoaWRkZW47DQp9", mtime: 1751843967423 } }, functions: { toggle: { path: "./graphview.ts:toggleGraphView", command: { name: "Show Global Graph", key: "ctrl-shift-g", mac: "Cmd-shift-g" } }, toggleLocal: { path: "./graphview.ts:toggleLocalGraphView", command: { name: "Show Local Graph", key: "ctrl-shift-l", mac: "Cmd-shift-l" } }, updateGraphView: { path: "./graphview.ts:updateGraphView", events: ["editor:pageLoaded", "editor:pageReloaded"] }, navigateTo: { path: "./utils.ts:navigateTo", events: ["graphview:navigateTo"] } } }, wZ = { manifest: f, functionMapping: E }; z(E, f, self.postMessage); export { wZ as plug };
